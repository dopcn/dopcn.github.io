{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-users-fengweizhou-documents-gatsby-project-blog-blog-church-numerals-mdx-56b77a819cbe01e15bd1.js","mappings":"4MAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,IAAK,QACJC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,2HAA4H,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,kOAAmO,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,2FAA4F,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,wKAAyK,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,+GAAgH,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,4ZAA6Z,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,0DAA2D,KAAMM,EAAAA,cAAoBT,EAAYM,IAAK,CACntDI,IAAK,QACLC,IAAK,KACH,KAAMF,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,SACrD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWd,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,kBCbA,MAAMe,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAOR,EAAAA,cAAoBS,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/Bb,EAAAA,cAAoB,IAAK,KAAMO,EAAKI,IAAIC,YAAYE,MAAON,EAAS,EAY5DO,EAAOC,IAAA,IAAC,KAACT,GAAK,SAAKP,EAAAA,cAAoBiB,EAAAA,EAAK,CACvDJ,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASK,EAAiB5B,GACvC,OAAOU,EAAAA,cAAoBK,EAAUf,EAAOU,EAAAA,cAAoBmB,EAAqB7B,GACvF,C,6ECvBW8B,EAAc,sCACdC,EAAc,sCCgDzB,MAzCgB/B,IACZ,MAAMiB,GAAOe,EAAAA,EAAAA,IAAe,cAatBZ,EAAYpB,EAAMoB,UAClBF,EAAWlB,EAAMkB,SACvB,OACI,uBAAKe,UD3BU,mCC4BX,0BAAQA,UDvBG,oCCuBoBhB,EAAKiB,KAAKC,aAAaZ,OACtD,2BACI,sBAAIU,UD1BE,mCC2BF,sBAAIA,UAAWH,GACX,gBAAC,KAAI,CAACM,GAAG,IAAIH,UAAWF,GAAY,SAExC,sBAAIE,UAAWH,GACX,gBAAC,KAAI,CAACM,GAAG,SAASH,UAAWF,GAAY,UAE7C,sBAAIE,UAAWH,GACX,gBAAC,KAAI,CAACM,GAAG,QAAQH,UAAWF,GAAY,cAIpD,4BACI,sBAAIE,UD1CC,iCC0CoBb,GACxBF,GAEL,8BAASD,EAAKoB,kBAAkBC,WAC9B,C,+CC7Bd,IAhBY,IAAgB,IAAf,MAAEf,GAAO,EACpB,MAAMN,GAAOe,EAAAA,EAAAA,IAAe,cAU5B,OACE,6BAAQT,EAAK,MAAKN,EAAKiB,KAAKC,aAAaZ,MAAc,C,sECiBpD,MAAMgB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB/B,GAC/B,MAAMgC,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAf9B,EACFA,EAAWgC,GAGb,IAAIA,KAAsBhC,IAChC,CAACgC,EAAmBhC,GACzB,C","sources":["webpack://dopcn-blog/./blog/church-numerals.mdx","webpack://dopcn-blog/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://dopcn-blog/./src/components/layout.module.css","webpack://dopcn-blog/./src/components/layout.js","webpack://dopcn-blog/./src/components/seo.js","webpack://dopcn-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"复合数据只要拥有满足一定条件的构造函数、选择函数和约束规则，甚至不需要是由基本数据复合，church 计数是一个以 lambda 表达式为唯一元素，构建数值、数值运算等编程要素的系统，在church 计数中 0 和 加1 运算分别被定义为\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func zero<T>(f:(T->T)) -> T->T {\\n    return {x in\\n        return x}\\n}\\n\\nfunc add_1<T>(n:(T->T) -> T->T) -> (T->T) -> T->T {\\n    return {f in\\n        return {x in\\n            return f(n(f)(x))\\n        }\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"0 是一个以函数为参数返回一个函数的过程，加1 运算是作用于类似 0 这样的过程之上返回一个新过程的函数，将 0 带入 加1 运算得到 1 的定义，带入 1 得到 2 的定义\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func one<T>(f:(T->T)) -> T->T {\\n    return {x in\\n        return f(x)}\\n}\\n\\nfunc two<T>(f:(T->T)) -> T->T {\\n    return {x in\\n        return f(f(x))\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"形式上讲 church 计数的正整数可以看做应用参数函数的过程，0 是应用 0 次直接返回原值，1 是返回应用 1 次得到的返回值，以此类推。加法的定义是先应用第一个加数次，再应用第二个加数次，乘法是应用次数之积次\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"func plus<T>(operand1 operand1: (T->T) -> T->T, operand2: (T->T) -> T->T) -> (T->T) -> T->T {\\n    return {f in\\n        return {x in\\n            return operand2(f)(operand1(f)(x))\\n        }\\n    }\\n}\\n\\nfunc mult<T>(operand1 operand1: (T->T) -> T->T, operand2: (T->T) -> T->T) -> (T->T) -> T->T {\\n    return {f in\\n        return {x in\\n            return operand2(operand1(f))(x)\\n        }\\n    }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"减法的定义先考虑简单的情况，任意给定一个过程进行减 1，从概念上讲应该是应用给定过程的减 1 次，实现方法：\"), \"\\n\", React.createElement(_components.img, {\n    src: \"1.jpg\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"我没想出来\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/fengweizhou/Documents/gatsby_project/blog/blog/church-numerals.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport {\n    container,\n    heading,\n    navLinks,\n    navLinkItem,\n    navLinkText,\n    siteTitle,\n  } from './layout.module.css'\n\nconst Layout = (props) => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      siteBuildMetadata {\n        buildTime\n      }\n    }\n  `)\n\n    const pageTitle = props.pageTitle;\n    const children = props.children;\n    return (\n        <div className={container}>\n            <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n            <nav>\n                <ul className={navLinks}>\n                    <li className={navLinkItem}>\n                        <Link to='/' className={navLinkText}>Home</Link>\n                    </li>\n                    <li className={navLinkItem}>\n                        <Link to='/about' className={navLinkText}>About</Link>\n                    </li>\n                    <li className={navLinkItem}>\n                        <Link to=\"/blog\" className={navLinkText}>Archive</Link>\n                    </li>\n                </ul>\n            </nav>\n            <main>\n                <h1 className={heading}>{pageTitle}</h1>\n                {children}\n            </main>\n            <footer>{data.siteBuildMetadata.buildTime}</footer>\n        </div>\n    );\n}\n\nexport default Layout;","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","img","_provideComponents","components","React","src","alt","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","navLinkText","useStaticQuery","className","site","siteMetadata","to","siteBuildMetadata","buildTime","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}