"use strict";(self.webpackChunkdopcn_blog=self.webpackChunkdopcn_blog||[]).push([[772],{2164:function(e,n,t){t.r(n),t.d(n,{Head:function(){return i},default:function(){return T}});var r=t(1151),a=t(7294);function l(e){const n=Object.assign({p:"p",pre:"pre",code:"code",img:"img"},(0,r.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"复合数据只要拥有满足一定条件的构造函数、选择函数和约束规则，甚至不需要是由基本数据复合，church 计数是一个以 lambda 表达式为唯一元素，构建数值、数值运算等编程要素的系统，在church 计数中 0 和 加1 运算分别被定义为"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"func zero<T>(f:(T->T)) -> T->T {\n    return {x in\n        return x}\n}\n\nfunc add_1<T>(n:(T->T) -> T->T) -> (T->T) -> T->T {\n    return {f in\n        return {x in\n            return f(n(f)(x))\n        }\n    }\n}\n")),"\n",a.createElement(n.p,null,"0 是一个以函数为参数返回一个函数的过程，加1 运算是作用于类似 0 这样的过程之上返回一个新过程的函数，将 0 带入 加1 运算得到 1 的定义，带入 1 得到 2 的定义"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"func one<T>(f:(T->T)) -> T->T {\n    return {x in\n        return f(x)}\n}\n\nfunc two<T>(f:(T->T)) -> T->T {\n    return {x in\n        return f(f(x))\n    }\n}\n")),"\n",a.createElement(n.p,null,"形式上讲 church 计数的正整数可以看做应用参数函数的过程，0 是应用 0 次直接返回原值，1 是返回应用 1 次得到的返回值，以此类推。加法的定义是先应用第一个加数次，再应用第二个加数次，乘法是应用次数之积次"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"func plus<T>(operand1 operand1: (T->T) -> T->T, operand2: (T->T) -> T->T) -> (T->T) -> T->T {\n    return {f in\n        return {x in\n            return operand2(f)(operand1(f)(x))\n        }\n    }\n}\n\nfunc mult<T>(operand1 operand1: (T->T) -> T->T, operand2: (T->T) -> T->T) -> (T->T) -> T->T {\n    return {f in\n        return {x in\n            return operand2(operand1(f))(x)\n        }\n    }\n}\n")),"\n",a.createElement(n.p,null,"减法的定义先考虑简单的情况，任意给定一个过程进行减 1，从概念上讲应该是应用给定过程的减 1 次，实现方法："),"\n",a.createElement(n.img,{src:"1.jpg",alt:""}),"\n",a.createElement(n.p,null,"我没想出来"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)},u=t(72),o=t(9357);const m=e=>{let{data:n,children:t}=e;return a.createElement(u.Z,{pageTitle:n.mdx.frontmatter.title},a.createElement("p",null,n.mdx.frontmatter.date),t)},i=e=>{let{data:n}=e;return a.createElement(o.Z,{title:n.mdx.frontmatter.title})};function T(e){return a.createElement(m,e,a.createElement(c,e))}},72:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(7294),a=t(1883),l="layout-module--nav-link-item--a5f0a",c="layout-module--nav-link-text--69cda";var u=e=>{const n=(0,a.K2)("3555523106"),t=e.pageTitle,u=e.children;return r.createElement("div",{className:"layout-module--container--78b04"},r.createElement("header",{className:"layout-module--site-title--e4dea"},n.site.siteMetadata.title),r.createElement("nav",null,r.createElement("ul",{className:"layout-module--nav-links--1113b"},r.createElement("li",{className:l},r.createElement(a.rU,{to:"/",className:c},"Home")),r.createElement("li",{className:l},r.createElement(a.rU,{to:"/about",className:c},"About")),r.createElement("li",{className:l},r.createElement(a.rU,{to:"/blog",className:c},"Archive")))),r.createElement("main",null,r.createElement("h1",{className:"layout-module--heading--f158c"},t),u),r.createElement("footer",null,n.siteBuildMetadata.buildTime))}},9357:function(e,n,t){var r=t(7294),a=t(1883);n.Z=e=>{let{title:n}=e;const t=(0,a.K2)("3159585216");return r.createElement("title",null,n," | ",t.site.siteMetadata.title)}},1151:function(e,n,t){t.d(n,{ah:function(){return l}});var r=t(7294);const a=r.createContext({});function l(e){const n=r.useContext(a);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);
//# sourceMappingURL=component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-users-fengweizhou-documents-gatsby-project-blog-blog-church-numerals-mdx-56b77a819cbe01e15bd1.js.map